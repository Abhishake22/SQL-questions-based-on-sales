CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(100) NOT NULL
);

CREATE TABLE spending (
    spending_id INT PRIMARY KEY,
    customer_id INT,
    spending_amount DECIMAL(10, 2),
    spending_date DATE NOT NULL,
    -- Other spending-related columns can be added here
    FOREIGN KEY (customer_id) REFERENCES customers (customer_id)
);


INSERT INTO customers (customer_id, customer_name) VALUES
(1, 'John Doe'),
(2, 'Jane Smith'),
(3, 'Mike Johnson'),
(4, 'Emily Brown'),
(5, 'David Lee'),
(6, 'Sarah Wilson');


INSERT INTO spending (spending_id, customer_id, spending_amount, spending_date) VALUES
(101, 1, 100.50, '2023-01-01'),
(102, 2, 150.75, '2023-01-01'),
(103, 3, 200.00, '2023-01-01'),
(104, 4, 80.25, '2023-01-01'),
(105, 5, 120.00, '2023-01-01'),
(106, 6, 50.00, '2023-01-01'),
(107, 1, 120.25, '2023-02-01'),
(108, 2, 180.50, '2023-02-01'),
(109, 3, 250.00, '2023-02-01'),
(110, 4, 90.75, '2023-02-01'),
(111, 5, 140.00, '2023-02-01'),
(112, 6, 60.00, '2023-02-01'),
(113, 1, 150.00, '2023-03-01'),
(114, 2, 220.00, '2023-03-01'),
(115, 3, 300.00, '2023-03-01'),
(116, 4, 100.50, '2023-03-01'),
(117, 5, 160.00, '2023-03-01'),
(118, 6, 70.00, '2023-03-01');


SQL QUERY TO get Top 10 customers based on spending growth 


WITH spending_growth AS (
    SELECT 
        customer_id,
        MAX(spending_amount) AS latest_spending,
        MIN(spending_amount) AS initial_spending,
        (MAX(spending_amount) - MIN(spending_amount)) / MIN(spending_amount) * 100 AS growth_percentage
    FROM spending
    GROUP BY customer_id
)
SELECT 
    c.customer_name,
    sg.initial_spending AS initial_spending_amount,
    sg.latest_spending AS latest_spending_amount,
    sg.growth_percentage
FROM spending_growth sg
JOIN customers c ON sg.customer_id = c.customer_id
ORDER BY sg.growth_percentage DESC
LIMIT 10;
